
#include <iostream>

using namespace std;
void
partition (int arr[], int n, int a, int b)
{
  int start = 0, end = n - 1, i = 0;
  while (i <= end)
    {

      if (arr[i] > b)
	{
	  swap (arr[i], arr[end]);
	  end--;
	}

      else if (arr[i] < a)
	{
	  swap (arr[start], arr[i]);
	  i++;
	  start++;

	}

      else
	{
	  i++;
	}
    }

}

int
main ()
{

  int arr[] = { 1, 2, 3 };
  int n = sizeof (arr) / sizeof (arr[0]);
  int a = 1, b = 2;
  partition (arr, n, a, b);
  for (int i = 0; i < n; i++)
    {
      cout << arr[i];
    }

  return 0;
}

#include <iostream>

using namespace std;
void
partition (int arr[], int n, int a, int b)
{
  int start = 0, end = n - 1, i = 0;
  while (i <= end)
    {

      if (arr[i] > b)
	{
	  swap (arr[i], arr[end]);
	  end--;
	}

      else if (arr[i] < a)
	{
	  swap (arr[start], arr[i]);
	  i++;
	  start++;

	}

      else
	{
	  i++;
	}
    }

}

int
main ()
{

  int arr[] = { 1, 2, 3 };
  int n = sizeof (arr) / sizeof (arr[0]);
  int a = 1, b = 2;
  partition (arr, n, a, b);
  for (int i = 0; i < n; i++)
    {
      cout << arr[i];
    }

  return 0;
}
